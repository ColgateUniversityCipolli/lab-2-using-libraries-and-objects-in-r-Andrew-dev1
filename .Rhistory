}
}
fileConn<-file("batfile.txt")
writeLines(code.to.process, fileConn)
close(fileConn)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
parts.of.name <- str_split(name.file, "-")[[1]]
object <- fromJSON(name.file)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
parts.of.name <- str_split(name.file, "")[[1]]
object <- fromJSON(name.file)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
parts.of.name <- str_split(name.file, "")
object <- fromJSON(name.file)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
parts.of.name <- str_split(name.file, "")
object <- fromJSON(name.file)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
object <- fromJSON(name.file)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
object <- fromJSON(name.file)
name.file <- "the Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
object <- fromJSON(name.file)
name.file <- "\the Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
object <- fromJSON(name.file)
name.file <- "/the Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
object <- fromJSON(name.file)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
object <- fromJSON(name.file)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
parts.of.name <- str_split(name.file, "-")[[1]]
object <- fromJSON(parts.of.name)
?fromJSON
vignette(fromJSON)
demo(fromJSON())
vignette(fromJSON())
vignette(fromJSON)
fromJSON(object, parts.of.name)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
parts.of.name <- str_split(name.file, "-")[[1]]
object <- NA
fromJSON(object, parts.of.name)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
parts.of.name <- str_split(name.file, "-")[[1]]
object <- NA
fromJSON(object, name.file)
name.file <- "\The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
name.file <- "\The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
fromJSON(object, readLines(name.file))
fromJSON(name.file,object)
name.file <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
fromJSON(object, name.file)
fromJSON(name.file)
name.file <- "TheFront Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
parts.of.name <- str_split(name.file, "-")[[1]]
object <- NA
fromJSON(name.file)
list.dirs(name.file)
name.file <- "/lab-2-using-libraries-and-objects-in-r-Andrew-dev1"
list.dirs(name.file)
name.file <- "lab-2-using-libraries-and-objects-in-r-Andrew-dev1"
list.dirs(name.file)
name.file <- "~/Desktop/2024-25/MATH 240/lab-2-using-libraries-and-objects-in-r-Andrew-dev1"
list.dirs(name.file)
name.file <- "~/Desktop/2024-25/MATH 240/lab-2-using-libraries-and-objects-in-r-Andrew-dev1"
list.dirs(name.file)
name.file <- "~/Desktop/2024-25/MATH 240/lab-2-using-libraries-and-objects-in-r-Andrew-dev1/The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
list.dirs(name.file)
name.file <- "~/Desktop/2024-25/MATH 240/lab-2-using-libraries-and-objects-in-r-Andrew-dev1/The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
list.files(name.file)
name.file <- "~/Desktop/2024-25/MATH 240/lab-2-using-libraries-and-objects-in-r-Andrew-dev1"
list.files(name.file)
fromJSON(The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json)
fromJSON("The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json")
fromJSON("The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json")
fromJSON("~/Desktop/2024-25/MATH 240/lab-2-using-libraries-and-objects-in-r-Andrew-dev1/The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json")
name.files <- list.files()
name.files
name.files <- list.files()
current.file <- name.files[11]
current.file
name.files <- list.dirs()
main.dir <- "music/"
vec.musics <- list.dirs(main.dir)
vec.musics
cd
ls
list.dirs()
warnings()
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
vec.musics
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
# subsetting all the album files by
directs <- str_count(vec.musics, pattern = "/")
subdirects.indices <- which(directs == 3)
subdirects <- rep(x = NA, times = length(subdirects.indices))
counter <- 1
for(i in subdirects.indices){
subdirects[counter] <- vec.musics[i]
counter <- counter + 1
}
subdirects
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
# subsetting all the album files by
directs <- str_count(vec.musics, pattern = "/")
subdirects.indices <- which(directs == 3)
subdirects <- rep(x = NA, times = length(subdirects.indices))
counter <- 1
for(i in subdirects.indices){
subdirects[counter] <- vec.musics[i]
counter <- counter + 1
}
vec.musics
dir()
for(i in subdirects.indices){
subdirects[counter] <- vec.musics[i]
counter <- counter + 1
}
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
# subsetting all the album files by
directs <- str_count(vec.musics, pattern = "/")
subdirects.indices <- which(directs == 3)
subdirects <- rep(x = NA, times = length(subdirects.indices))
counter <- 1
for(i in subdirects.indices){
subdirects[counter] <- vec.musics[i]
counter <- counter + 1
}
all.files <- list.files(subdirects)
file.indices <- which(str_count(all.files, pattern = ".wav") == 1)
wav.files <- rep(x = NA, times = length(file.indices))
counter <- 1
for(file.num in file.indices){
wav.files[counter] <- all.files[file.num]
counter <- counter + 1
}
code.to.process <- rep(x = NA, times = length(wav.files))
counter <- 1
for(file in wav.files){
x <- paste(file)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
code.to.process[counter] <- x[2] + x[3]
counter <- counter +1
}
code.to.process <- c()
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- rep(x = NA, times = length(file.indices))
shortened <- str_split(subdirects[i], "/")
album.name <- shortened[[1]][4]
for(file.in.sub in current){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
fileConn<-file("batfile.txt")
writeLines(code.to.process, fileConn)
close(fileConn)
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
# subsetting all the album files by
directs <- str_count(vec.musics, pattern = "/")
subdirects.indices <- which(directs == 3)
subdirects <- rep(x = NA, times = length(subdirects.indices))
counter <- 1
for(i in subdirects.indices){
subdirects[counter] <- vec.musics[i]
counter <- counter + 1
}
all.files <- list.files(subdirects)
file.indices <- which(str_count(all.files, pattern = ".wav") == 1)
wav.files <- rep(x = NA, times = length(file.indices))
counter <- 1
for(file.num in file.indices){
wav.files[counter] <- all.files[file.num]
counter <- counter + 1
}
code.to.process <- rep(x = NA, times = length(wav.files))
counter <- 1
for(file in wav.files){
x <- paste(file)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
code.to.process[counter] <- x[2] + x[3]
counter <- counter +1
}
code.to.process <- c()
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- rep(x = NA, times = length(file.indices))
shortened <- str_split(subdirects[i], "/")
album.name <- shortened[[1]][4]
for(file.in.sub in current){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
fileConn<-file("batfile.txt")
writeLines(code.to.process, fileConn)
close(fileConn)
name.files <- list.files()
name.file
name.files
setwd("~/Desktop/2024-25/MATH 240/lab-2-using-libraries-and-objects-in-r-Andrew-dev1")
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
# subsetting all the album files by
directs <- str_count(vec.musics, pattern = "/")
subdirects.indices <- which(directs == 3)
subdirects <- rep(x = NA, times = length(subdirects.indices))
counter <- 1
for(i in subdirects.indices){
subdirects[counter] <- vec.musics[i]
counter <- counter + 1
}
all.files <- list.files(subdirects)
file.indices <- which(str_count(all.files, pattern = ".wav") == 1)
wav.files <- rep(x = NA, times = length(file.indices))
counter <- 1
for(file.num in file.indices){
wav.files[counter] <- all.files[file.num]
counter <- counter + 1
}
code.to.process <- rep(x = NA, times = length(wav.files))
counter <- 1
for(file in wav.files){
x <- paste(file)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
code.to.process[counter] <- x[2] + x[3]
counter <- counter +1
}
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
# subsetting all the album files by
directs <- str_count(vec.musics, pattern = "/")
subdirects.indices <- which(directs == 3)
subdirects <- rep(x = NA, times = length(subdirects.indices))
counter <- 1
for(i in subdirects.indices){
subdirects[counter] <- vec.musics[i]
counter <- counter + 1
}
vec.musics
code.to.process <- c()
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- rep(x = NA, times = length(file.indices))
shortened <- str_split(subdirects[i], "/")
album.name <- shortened[[1]][4]
for(file.in.sub in current){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
fileConn<-file("batfile.txt")
writeLines(code.to.process, fileConn)
close(fileConn)
name.files <- list.files()
name.files
name.files <- list.files()
current.file <- name.files[11]
parts.of.name <- str_split(current.file, "-", simplify = T)
object <- fromJSON(current.file)
View(object)
dim(object)
object$lowlevel
object$lowlevel$average_loudness
parts.of.name
subs <- vec.musics[subdirects.indices]
subs
subdirects
directs
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
# subsetting all the album files by taking out all of the subdirectories
directs <- str_count(vec.musics, pattern = "/")
subdirects.indices <- which(directs == 3)
subdirects <- vec.musics[subdirects.indices]
#
code.to.process <- c()
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- rep(x = NA, times = length(file.indices))
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- shortened[4]
for(file.in.sub in current){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
#writes in all of the
fileConn<-file("batfile.txt")
writeLines(code.to.process, fileConn)
close(fileConn)
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- current[file.indices]
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- shortened[4]
print(album.name)
for(file.in.sub in wav.files){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
# iterate through all subdirectories of the artists and take out only the wave files
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- current[file.indices]
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- shortened[4]
print(shortened)
for(file.in.sub in wav.files){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
code.to.process <- c()
# iterate through all subdirectories of the artists and take out only the wave files
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- current[file.indices]
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- basename(shortened)
print(shortened, album.name)
for(file.in.sub in wav.files){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
code.to.process <- c()
# iterate through all subdirectories of the artists and take out only the wave files
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- current[file.indices]
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- basename(shortened)
print(album.name)
for(file.in.sub in wav.files){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
album.name <- basename(wav.files)
print(album.name)
?basename
album.name <- basename(subdirects[i])
print(album.name)
current
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- current[file.indices]
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- shortened[4]
print(album.name)
for(file.in.sub in wav.files){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- current[file.indices]
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- basename(current)
print(album.name)
for(file.in.sub in wav.files){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
# iterate through all subdirectories of the artists and take out only the wave files
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- current[file.indices]
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- shortened[4]
print(album.name)
for(file.in.sub in wav.files){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
x <- str_split(x, "-")
final.parts <- x[[1]]
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
main.dir <- "MUSIC/"
vec.musics <- list.dirs(main.dir)
# subsetting all the album files by taking out all of the subdirectories
directs <- str_count(vec.musics, pattern = "/")
subdirects.indices <- which(directs == 3)
subdirects <- vec.musics[subdirects.indices]
code.to.process <- c()
# iterate through all subdirectories of the artists and take out only the wave files
for(i in 1:length(subdirects)){
current <- list.files(subdirects[i])
file.indices <- which(str_count(current, pattern = ".wav") == 1)
wav.files <- current[file.indices]
shortened <- str_split(subdirects[i], "/", simplify = T)
album.name <- shortened[4]
print(album.name)
for(file.in.sub in wav.files){
x <- paste(file.in.sub)
x <- str_sub(x,1, length(x)-6)
final.parts <- str_split(x, "-", simplify = T)
sentence <- str_c(final.parts[2],album.name, final.parts[3], sep = "-")
sentence <- paste("streaming_extractor_music.exe ", file.in.sub, str_c(sentence, ".json"))
code.to.process <- append(code.to.process,sentence)
}
}
#writes in all of the
fileConn<-file("batfile.txt")
writeLines(code.to.process, fileConn)
close(fileConn)
#Task 2
#splitting the items from the file name
name.files <- list.files()
current.file <- name.files[11]
parts.of.name <- str_split(current.file, "-", simplify = T)
artist <- parts.of.name[1]
album <- parts.of.name[2]
track <- parts.of.name[3]
#loading in the json file and extracting each item
object <- fromJSON(current.file)
average.loudness <- object$lowlevel$average_loudness
mean.spectral.energy <- object$lowlevel$spectral_energy$mean
danceability <- object$rhythm$danceability
bpm <- object$rhythm$bpm
key_key <- object$tonal$key_key
key_scale <- object$tonal$key_scale
length <- object$metadata$audio_properties$length
parts.of.name
?grep
sub("\\.json$", parts.of.name)
sub("\\.json$", parts.of.name[3])
sub(".json$", parts.of.name[3])
track <- sub(".json", parts.of.name[3])
grepl("\\.wav$", current)
which(grepl("\\.wav$", current))
file.indices
sub(".json", parts.of.name[3], "")
?sub
sub(".json", "", parts.of.name[3])
